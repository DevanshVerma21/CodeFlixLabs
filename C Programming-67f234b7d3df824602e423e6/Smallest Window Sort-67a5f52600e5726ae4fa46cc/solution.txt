[{"code":"#include <stdio.h>\r\n\r\nint findUnsortedSubarray(int arr[],int n){\r\n    int count = 0;\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j =0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T17:45:40.049Z","isCorrect":false},{"code":"#include <stdio.h>\r\n\r\nint findUnsortedSubarray(int arr[],int n){\r\n    int count = 0;\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j =0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n    return count;\r\n}","language":"c","time":"2025-05-28T17:48:11.088Z","isCorrect":false},{"code":"#include <stdio.h>\r\n\r\nint findUnsortedSubarray(int arr[],int n){\r\n    int count = 0;\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j =0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n                count++;\r\n            }\r\n        }\r\n    }\r\n    return count;\r\n}","language":"c","time":"2025-05-28T18:03:23.180Z","isCorrect":false},{"code":"int findUnsortedSubarray(int arr[], int n) {\r\n    int sorted[n];\r\n\r\n    // Step 1: Copy the original array\r\n    for (int i = 0; i < n; i++) {\r\n        sorted[i] = arr[i];\r\n    }\r\n\r\n    // Step 2: Sort the copied array using Bubble Sort\r\n    for (int i = 0; i < n - 1; i++) {\r\n        for (int j = 0; j < n - i - 1; j++) {\r\n            if (sorted[j] > sorted[j + 1]) {\r\n                int temp = sorted[j];\r\n                sorted[j] = sorted[j + 1];\r\n                sorted[j + 1] = temp;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Step 3: Find the first and last positions where arrays differ\r\n    int start = -1, end = -1;\r\n    for (int i = 0; i < n; i++) {\r\n        if (arr[i] != sorted[i]) {\r\n            if (start == -1) start = i;\r\n            end = i;\r\n        }\r\n    }\r\n\r\n    // If no differences found, array is already sorted\r\n    if (start == -1) return 0;\r\n\r\n    return end - start + 1;\r\n}\r\n","language":"c","time":"2025-05-28T18:11:08.079Z","isCorrect":true},{"code":"int findUnsortedSubarray(int arr[], int n) {\r\n    int sorted[n];\r\n\r\n    for(int i = 0;i<n;i++){\r\n        sorted[i] = arr[i];\r\n    }\r\n\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            int temp = sorted[j];\r\n            sorted[j] = sorted[j+1];\r\n            sorted[j+1] = temp;\r\n        }\r\n    }\r\n\r\n    int start = -1;\r\n    int end = -1;\r\n    for(int i = 0;i<n;i++){\r\n        if(sorted[i]!=arr[i]){\r\n            if(start==-1){\r\n                start = i;\r\n                end = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(start == -1)\r\n    return 0;\r\n\r\n    return end - start + 1; \r\n     \r\n\r\n}","language":"c","time":"2025-05-28T19:07:43.237Z","isCorrect":false}]