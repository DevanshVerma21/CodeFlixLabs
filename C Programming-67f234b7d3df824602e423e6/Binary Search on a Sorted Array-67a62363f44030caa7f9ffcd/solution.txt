[{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            int temp = arr[j];\r\n            arr[j] = arr[j+1];\r\n            arr[j+1] = temp;\r\n        }\r\n    }\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] == target){\r\n            printf(\"%d\",i);\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T20:13:35.150Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            int temp = arr[j];\r\n            arr[j] = arr[j+1];\r\n            arr[j+1] = temp;\r\n        }\r\n    }\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] = target){\r\n            printf(\"%d\",i);\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T20:13:51.844Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            int temp = arr[j];\r\n            arr[j] = arr[j+1];\r\n            arr[j+1] = temp;\r\n        }\r\n    }\r\n\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] == target){\r\n            printf(\"%d\",i);\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T20:15:19.193Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n            int temp = arr[j];\r\n            arr[j] = arr[j+1];\r\n            arr[j+1] = temp;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] == target){\r\n            printf(\"%d\",i);\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T20:17:12.553Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] == target){\r\n            printf(\"%d\",i);\r\n            break;\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T20:20:47.490Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] == target){\r\n            return i;\r\n            break;\r\n        }\r\n        else{\r\n            return -1;\r\n        }\r\n    }\r\n}","language":"c","time":"2025-05-28T20:22:49.448Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    for(int i = 0;i<n-1;i++){\r\n        for(int j = 0;j<n-i-1;j++){\r\n            if(arr[j]>arr[j+1]){\r\n                int temp = arr[j];\r\n                arr[j] = arr[j+1];\r\n                arr[j+1] = temp;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 0;i<n;i++){\r\n        if(arr[i] == target){\r\n            return i;\r\n        }        \r\n    }\r\n            return -1;\r\n\r\n}","language":"c","time":"2025-05-28T20:24:13.213Z","isCorrect":false},{"code":"int binarySearch(int arr[],int n,int target){\r\n    int low = 0;\r\n    int high = n-1;\r\n    \r\n    while(low<=high){\r\n        int mid = (low+high)/2;\r\n\r\n        if(arr[mid]== target){\r\n            return mid;\r\n        }\r\n        else if(arr[mid]<target){\r\n            low = mid + 1; \r\n        }\r\n        else{\r\n            high = mid -1;\r\n        }\r\n\r\n    }\r\n    return -1;\r\n}","language":"c","time":"2025-05-28T20:34:00.175Z","isCorrect":true},{"code":"int binarySearch(int arr[],int n,int target){\r\n   int left = 0;\r\n   int right = n-1;\r\n\r\n   while(left<=right){\r\n        int mid = (left+right)/2;\r\n\r\n        if(arr[mid]==target){\r\n            return mid;\r\n        }\r\n        else if(arr[mid]<right){\r\n            left = mid + 1;\r\n        }\r\n        else{\r\n            right = mid - 1;\r\n        }\r\n\r\n   }\r\n   return -1;\r\n}","language":"c","time":"2025-05-28T20:37:27.969Z","isCorrect":false}]