[{"code":"#include <stdio.h>\r\nint findfirstpeak(int arr[],int n){\r\n    if(n == 1){\r\n        return arr[0];\r\n    }\r\n    if(arr[0]>=arr[1]){\r\n        return arr[0];\r\n    }\r\n\r\n    for(int i = 0;i<n-1;i++){\r\n        if(arr[i]>=arr[i-1] && arr[i]<=arr[i+1]){\r\n            return arr[i];\r\n        }\r\n    }\r\n    if (arr[n - 1] >= arr[n - 2]) \r\n    return arr[n - 1];  \r\n\r\n    return -1;\r\n\r\n\r\n}\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int arr[n];\r\n    for(int i = 0;i<n;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n\r\n\r\n}","language":"c","time":"2025-05-29T09:33:05.653Z","isCorrect":false},{"code":"#include <stdio.h>\r\nint findfirstpeak(int arr[],int n){\r\n    if(n == 1){\r\n        return arr[0];\r\n    }\r\n    if(arr[0]>=arr[1]){\r\n        return arr[0];\r\n    }\r\n\r\n    for(int i = 0;i<n-1;i++){\r\n        if(arr[i]>=arr[i-1] && arr[i]<=arr[i+1]){\r\n            return arr[i];\r\n        }\r\n    }\r\n    if (arr[n - 1] >= arr[n - 2]) \r\n    return arr[n - 1];  \r\n\r\n    return -1;\r\n\r\n\r\n}\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int arr[n];\r\n    for(int i = 0;i<n;i++){\r\n        scanf(\"%d\",&arr[i]);\r\n    }\r\n\r\n    findfirstpeak(arr,n);\r\n\r\n\r\n}","language":"c","time":"2025-05-29T09:33:15.589Z","isCorrect":false},{"code":"#include <stdio.h>\r\n\r\nint findFirstPeak(int arr[], int n) {\r\n    if (n == 1) return arr[0]; // Only one element â€” considered a peak\r\n\r\n    if (arr[0] > arr[1]) return arr[0]; // First element is peak\r\n\r\n    for (int i = 1; i < n - 1; i++) {\r\n        if (arr[i] > arr[i - 1] && arr[i] > arr[i + 1]) {\r\n            return arr[i]; // Found a peak\r\n        }\r\n    }\r\n\r\n    if (arr[n - 1] > arr[n - 2]) return arr[n - 1]; // Last element is peak\r\n\r\n    return -1; // No peak found\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n\r\n    int peak = findFirstPeak(arr, n);\r\n    printf(\"%d\\n\", peak);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-29T09:35:15.482Z","isCorrect":true},{"code":"#include <stdio.h>\r\n\r\nint findFirstPeak(int arr[], int n) {\r\n    if(n==1) return arr[0];\r\n\r\n    if(arr[0]>arr[1]) return arr[0];\r\n\r\n    for(int i = 0;i<n-1;i++){\r\n        if(arr[n]>arr[n-1] && arr[n]<arr[n+1]){\r\n            return arr[n];\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n\r\n    int peak = findFirstPeak(arr, n);\r\n    printf(\"%d\\n\", peak);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-29T09:47:48.146Z","isCorrect":false},{"code":"#include <stdio.h>\r\n\r\nint findFirstPeak(int arr[], int n) {\r\n    if(n==1) return arr[0];\r\n\r\n    if(arr[0]>arr[1]) return arr[0];\r\n\r\n    for(int i = 1;i<n-1;i++){\r\n        if(arr[i]>arr[i-1] && arr[i]<arr[i+1]){\r\n            return arr[i];\r\n        }\r\n    }\r\n    if(arr[n-1]> arr[n-2]) return arr[n-1];\r\n    return -1;\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n\r\n    int arr[n];\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &arr[i]);\r\n    }\r\n\r\n    int peak = findFirstPeak(arr, n);\r\n    printf(\"%d\\n\", peak);\r\n\r\n    return 0;\r\n}\r\n","language":"c","time":"2025-05-29T09:49:15.080Z","isCorrect":false}]